{"version":3,"sources":["components/AddCategory.js","helpers/fetchGit.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useGif.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","className","onSubmit","e","preventDefault","length","category","type","placeholder","value","onChange","target","getGif","a","axios","get","encodeURI","data","imgArr","map","info","title","id","url","images","downsized_medium","GiftGridItem","src","alt","GiftGrid","loading","setInfo","useEffect","setTimeout","then","useGif","img","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,sBAAMC,UAAU,OAAOC,SATJ,SAACC,GACpBA,EAAEC,iBAEEL,EAAMM,OAAS,GACjBR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAAyBO,QAKzC,SACE,uBACEC,KAAK,OACLN,UAAU,SACVO,YAAY,WACZC,MAAOV,EACPW,SAAU,SAACP,GAAD,OAAOH,EAASG,EAAEQ,OAAOF,a,iDCjB9BG,EAAM,uCAAG,WAAON,GAAP,mBAAAO,EAAA,sEAGVC,IAAMC,IAAN,uDALI,mCAKJ,eACsDC,UAC5DV,GAFM,cAHU,uBAEVW,EAFU,EAElBA,KAAQA,KAOJC,EAASD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAChC,MAAO,CACLC,MAAOD,EAAKC,MACZC,GAAIF,EAAKE,GACTC,IAAG,UAAEH,EAAKI,cAAP,aAAE,EAAaC,iBAAiBF,QAbnB,kBAiBbL,GAjBa,2CAAH,sDCFNQ,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,IAAKF,EAAY,EAAZA,MAClC,OACE,qBAAKpB,UAAU,OAAf,SACE,qBAAK0B,IAAKJ,EAAKK,IAAKP,OCDbQ,EAAW,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SACzB,ECFoB,SAACA,GACrB,MAAwBR,mBAAS,CAAE0B,OAAQ,GAAIM,SAAS,IAAxD,mBAAOV,EAAP,KAAaW,EAAb,KAUA,OARAC,qBAAU,WACRC,YAAW,WACTrB,EAAON,GAAU4B,MAAK,SAACV,GACrBO,EAAQ,CAAEP,SAAQM,SAAS,SAE5B,OACF,CAACxB,IAEGc,EDTqBe,CAAO7B,GAA3BkB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,QAEhB,OACE,qCACE,6BAAKxB,IAEJwB,GAAW,4CAEZ,qBAAK7B,UAAU,WAAf,SACGuB,EAAOL,KAAI,SAACiB,GAAD,OACV,cAAC,EAAD,eAA+BA,GAAZA,EAAId,aEXpBe,EAAgB,WAC3B,MAAoCvC,mBAAS,CAAC,gBAA9C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAEA,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGyC,EAAWnB,KAAI,SAACb,GAAD,OACd,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCVzBiC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.de163117.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (input.length > 2) {\r\n      setCategories((category) => [input, ...category]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"mt-2\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"search\"\r\n        placeholder=\"Category\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst KEY_GIF = \"gLNzpTu3d45F1bwpWzoVd2tjNm7Zdp5x\";\r\n\r\nexport const getGif = async (category) => {\r\n  const {\r\n    data: { data },\r\n  } = await axios.get(\r\n    `https://api.giphy.com/v1/gifs/search?api_key=${KEY_GIF}&&q=${encodeURI(\r\n      category\r\n    )}&&limit=5`\r\n  );\r\n\r\n  const imgArr = data.map((info) => {\r\n    return {\r\n      title: info.title,\r\n      id: info.id,\r\n      url: info.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return imgArr;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GiftGridItem = ({ url, title }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useGif } from \"../hooks/useGif\";\r\nimport { GiftGridItem } from \"./GiftGridItem\";\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n  const { images, loading } = useGif(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p>loading....</p>}\r\n\r\n      <div className=\"car-grid\">\r\n        {images.map((img) => (\r\n          <GiftGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/fetchGit\";\r\n\r\nexport const useGif = (category) => {\r\n  const [info, setInfo] = useState({ images: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getGif(category).then((images) => {\r\n        setInfo({ images, loading: false });\r\n      });\r\n    }, 3000);\r\n  }, [category]);\r\n\r\n  return info;\r\n};\r\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GiftGrid } from \"./components/GiftGrid\";\n\nexport const GiftExpertApp = () => {\n  const [categories, setCategories] = useState([\"Saint Seiya\"]);\n\n  return (\n    <>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GiftGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftExpertApp } from \"./GiftExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}